Looking at your SendGrid webhook implementation, I can see several potential issues that could prevent emails from being processed correctly. Let me analyze the code and provide specific fixes:

## Key Issues Found:

### 1. **Webhook Route Duplication**
You have the webhook route registered in both `index.ts` (lines 11-24) and `routes.ts` (lines 30-50). This can cause conflicts.

### 2. **Form Data Parsing Issues**
SendGrid sends form-encoded data, but your current setup might not be parsing it correctly for all fields.

### 3. **Missing Error Handling for Required Fields**

## Recommended Fixes:Now, let me provide a simplified index.ts that removes the duplication:And here's a test endpoint you can add to your routes.ts to debug incoming webhook data:## Immediate Action Plan:

### 1. **Replace the webhook handler**
Update your `email-webhook.ts` with the fixed version above.

### 2. **Remove duplication in index.ts**
Use the simplified version that removes the duplicate webhook route.

### 3. **Add debug endpoints**
Add the test endpoints to your `routes.ts` for debugging.

### 4. **Test the webhook**
After deploying the changes:

1. **Test the debug endpoint first:**
   ```bash
   curl -X POST https://musobuddy.replit.app/api/webhook/debug \
     -H "Content-Type: application/x-www-form-urlencoded" \
     -d "to=leads@musobuddy.com&from=test@example.com&subject=Test&text=Hello"
   ```

2. **Test with SendGrid's webhook tester** in your SendGrid dashboard

3. **Send a real test email** to leads@musobuddy.com

### 5. **Check SendGrid Configuration**
Make sure your SendGrid Inbound Parse settings have:
- **URL:** `https://musobuddy.replit.app/api/webhook/sendgrid`
- **POST method selected**
- **Domain:** `musobuddy.com` 
- **MX record:** `mx.sendgrid.net` with priority 10

### 6. **Monitor the logs**
Watch your console output when testing. The fixed version provides much more detailed logging to help identify exactly where any issues occur.

The key fixes in the new version:
- ✅ Better form data parsing
- ✅ More robust error handling
- ✅ Detailed logging for debugging
- ✅ Fallback processing if email parsing fails
- ✅ Proper timeout handling
- ✅ Removes route duplication issues

Try implementing these changes and let me know what the debug output shows!