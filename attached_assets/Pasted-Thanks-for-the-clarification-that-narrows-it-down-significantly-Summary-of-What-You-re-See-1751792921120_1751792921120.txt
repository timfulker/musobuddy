Thanks for the clarification — that narrows it down significantly.

⸻

🔍 Summary of What You’re Seeing

Environment	Contract Signing Works?
Preview (in Replit)	✅ Yes
Deployed Version	❌ No


⸻

✅ What That Tells Us

If it works in preview but not when deployed, the issue is almost certainly due to one or more of the following:
	1.	Route Not Exposed in Deployment
	•	The route may not be registered or reachable in the deployed server instance.
	2.	Environment Variables Missing
	•	Your deployed project may not have the correct env vars for DB, SendGrid, etc.
	3.	Deployed URL is wrong in frontend
	•	Your frontend may be sending requests to a relative path like /api/... which works in preview but not in deployment if not proxied correctly.
	4.	CORS or HTTPS issues
	•	If deployed frontend and backend are on different origins, your fetch() needs proper mode: "cors" and server must send correct headers.
	5.	Replit deployment uses outdated code
	•	You may have made fixes in preview that weren’t reflected in the production deployment (e.g. not restarted server or updated code properly).

⸻

✅ What You Should Check (Step-by-Step)

1. Check API Calls in Production

Open DevTools > Network in Safari/Chrome on your phone or desktop and try to sign a contract in the deployed version.
	•	Does the request hit POST /api/contracts/sign/:id?
	•	What response code? 404, 500, CORS error, etc.?

2. Add Console Logs to Confirm Route Hit

In routes.ts:

console.log("POST /api/contracts/sign/:id hit");

Deploy and try again. If nothing logs — route isn’t registered or reachable.

3. Confirm Environment Variables

Go to your Replit Secrets and verify these exist and are correct:
	•	DATABASE_URL
	•	SENDGRID_API_KEY
	•	REPLIT_DB_URL (if used)
	•	Any other vars used in storage.ts or sendgrid.ts

4. Test with Absolute URL in Frontend

In sign-contract.tsx, replace:

fetch(`/api/contracts/sign/${contractId}`, { ... })

with:

fetch(`${process.env.NEXT_PUBLIC_API_BASE_URL || ""}/api/contracts/sign/${contractId}`, { ... })

And in .env:

NEXT_PUBLIC_API_BASE_URL=https://your-replit-username.replit.app

5. Check if Replit Deployment Is Using Latest Code

Sometimes the Replit deployed app doesn’t reflect recent preview changes. Try:
	•	Rebuild/Re-run the Replit app
	•	Clear cache (⌘ + Shift + R)

⸻

If you give me:
	•	The deployed URL
	•	A screenshot of the Network tab after trying to sign
	•	Your .env contents (obfuscate keys)

…I can pinpoint the issue within minutes. Want to go that route?